{"remainingRequest":"D:\\others\\vuepress-theme-vdoing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\others\\vuepress-theme-vdoing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\others\\vuepress-theme-vdoing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\others\\vuepress-theme-vdoing\\node_modules\\vuepress-theme-vdoing\\components\\Home.vue?vue&type=template&id=2423ae67&scoped=true&","dependencies":[{"path":"D:\\others\\vuepress-theme-vdoing\\node_modules\\vuepress-theme-vdoing\\components\\Home.vue","mtime":499162500000},{"path":"D:\\others\\vuepress-theme-vdoing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\others\\vuepress-theme-vdoing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\others\\vuepress-theme-vdoing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\others\\vuepress-theme-vdoing\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}