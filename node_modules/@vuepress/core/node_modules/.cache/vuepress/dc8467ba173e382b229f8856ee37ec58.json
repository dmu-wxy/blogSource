{"remainingRequest":"E:\\document\\project\\blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\document\\project\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\document\\project\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\document\\project\\blog\\node_modules\\vuepress-theme-vdoing\\components\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\document\\project\\blog\\node_modules\\vuepress-theme-vdoing\\components\\Home.vue","mtime":499162500000},{"path":"E:\\document\\project\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\document\\project\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\document\\project\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\document\\project\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}