{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{442:function(e,t,v){\"use strict\";v.r(t);var r=v(15),l=Object(r.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[v(\"p\",[e._v(\"Servlet应用\")]),e._v(\" \"),v(\"h1\",{attrs:{id:\"概念\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#概念\"}},[e._v(\"#\")]),e._v(\" 概念\")]),e._v(\" \"),v(\"blockquote\",[v(\"p\",[e._v(\"Servlet是Java语言处理Web请求的一种机制，前面所讲的JSP其实就是建立在Servlet之上的。Servlet是Java Web技术的核心基础，是进一步学习Java EE 系列架构的前提。\")]),e._v(\" \"),v(\"p\",[e._v(\"Servlet是一种服务器端的Java程序，由服务器进行加载，具有独立于平台和协议的特性，可以生产动态的Web页面。\")]),e._v(\" \"),v(\"p\",[e._v(\"Servlet是位于Web服务器内部的服务器端的Java应用程序，它担任客户（Web浏览器）请求与服务器（Web服务器上的应用程序）响应的中间层。\")])]),e._v(\" \"),v(\"ul\",[v(\"li\",[e._v(\"Servlet容器：管理Servlet的生命周期.\")]),e._v(\" \"),v(\"li\",[e._v(\"Servlet引擎：同上，在Servlet容器中\")]),e._v(\" \"),v(\"li\",[e._v(\"Web容器/服务器：管理web应用（例：tomcat）\")]),e._v(\" \"),v(\"li\",[e._v(\"应用服务器：功能更强大（例：weblogic、websphere）\")])]),e._v(\" \"),v(\"h1\",{attrs:{id:\"编程方式\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编程方式\"}},[e._v(\"#\")]),e._v(\" 编程方式\")]),e._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[e._v(\"实现Servlet接口\")])]),e._v(\" \"),v(\"li\",[v(\"p\",[e._v(\"继承GenericServlet类\")]),e._v(\" \"),v(\"p\",[e._v(\"由java.servlet包提供的一个抽象类，它给出了Servlet接口中除了service()方法外的4个方法的实现，并且还是实现了ServletConfig接口，可以简化代码。\")])]),e._v(\" \"),v(\"li\",[v(\"p\",[e._v(\"继承HttpServlet类、覆盖doXXX()方法\")]),e._v(\" \"),v(\"p\",[e._v(\"由java.servlet.http包提供的一个抽象类， 它继承了GenericServlet类。通常情况下都是覆盖其doGet()和doPost()方法，然后在其中一个方法里调用另一个，做到合二为一。\")])]),e._v(\" \"),v(\"li\",[v(\"p\",[e._v(\"继承HttpServlet类、重写service()方法\")]),e._v(\" \"),v(\"p\",[e._v(\"本质就是扩展HttpServlet 类，用户只需要重写service()方法，Servlet模块执行service()方法时，会自动调用doGet()和doPost()方法， 实现Servlet的逻辑处理功能。\")])])]),e._v(\" \"),v(\"h1\",{attrs:{id:\"生命周期\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生命周期\"}},[e._v(\"#\")]),e._v(\" 生命周期\")]),e._v(\" \"),v(\"p\",[e._v(\"当部署Web容器时，Servlet被装载到容器中，生命周期开始（当长时间没有客户请求会被销毁，当客户发起请求时再次初始化）。\")]),e._v(\" \"),v(\"p\",[e._v(\"首先调用init()方法进行初始化，初始化后，调用service()方法，根据请求的不同调用不同的doXXX()方法处理客户请求，并将结果封装到HttpServletResponse中返回给客户端。当Servlet实例从容器中移除时调用其destroy()方法。\")])])}),[],!1,null,null,null);t.default=l.exports}}]);","extractedComments":[]}